name: backend

on:
  push:
    branches:
      - main

  schedule:
    # 9時間を足して、日本時間で毎日21時に実行
    - cron: '0 12 * * *'

defaults:
  run:
    working-directory: backend

jobs: # workflow 内で実行されるジョブの集合を定義
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # GitHubリポジトリのコードをGitHub Actionsのランナーにチェックアウト
      - uses: actions/setup-node@v3 # Node.jsをGitHub Actionsのランナーにセットアップする
        with:
          node-version: 16.x # セットアップするNode.jsのバージョンを指定(16系の最新版)

      - run: npm ci
      - run: npm run test -- --coverage
      - run: npm run build

      - run: node dist/index.js &
      - run: npx wait-on -t 10000 http://localhost:8080/api/health
      - run: npm run test:api

      - uses: actions/upload-artifact@v3 # ビルドやテストの結果をアーティファクトとして保存するためのアクション
        if: always()
        with:
          name: coverage # アーティファクトの名前を指定
          path: backend/coverage/** # アーティファクトとして保存するファイルやディレクトリのパスを指定
          retention-days: 5 # アーティファクトを保存する日数を指定(5日間)

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: backend/dist/index.js
          retention-days: 5


  deploy:
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist # rsync コマンドで後ほど、このエイリアスを利用する
          path: backend/dist
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.BACKEND_SERVER_SSH_KEY }}
          known_hosts: ${{ secrets.BACKEND_SERVER_KNOWN_HOSTS }}
      - run: echo ${{ secrets.BACKEND_SERVER_SSH_KEY }} && echo ${{ secrets.BACKEND_SERVER_KNOWN_HOSTS }} && echo ${{ secrets.BACKEND_SERVER_USER }}

      - run: rsync -v dist/index.js {$SERVER_USER}@{$SERVER_IP}:~/index.js # ダウンロードした dist を利用
        env:
          SERVER_USER: ${{ secrets.BACKEND_SERVER_USER }}
          SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}
      - run: ssh {$SERVER_USER}@{$SERVER_IP} sudo systemctl restart backend
        env:
          SERVER_USER: ${{ secrets.BACKEND_SERVER_USER }}
          SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}
      - run: ssh {$SERVER_USER}@{$SERVER_IP} systemctl status backend
        env:
          SERVER_USER: ${{ secrets.BACKEND_SERVER_USER }}
          SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}